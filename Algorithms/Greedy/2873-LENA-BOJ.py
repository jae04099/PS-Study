# r행 c열 직사각형. 
# 가장 왼쪽 위 칸에서 시작, 가장 오른쪽 아래 칸에 도착
# 각 칸은 한 번만 방문 해야하며, 방문하지 않아도 됨.
# 각 칸에는 탑승자가 얻을 수 있는 기쁨이 적힘
# 탄 사람이 얻을 수 있는 기쁨은 지나간 칸의 기쁨의 합
# 가장 큰 기쁨을 주는 롤러코스터는 어떻게 움직어야하나?

# 위 U, 오른쪽 R, 왼쪽 L, 아래 D
# 정답은 여러 가지 일 수도 있다(?)

# 다음으로 이동할 칸 중에 위, 아래, 오른쪽, 왼쪽 중 최댓값인 곳으로 ㄱㄱ해야할듯
# 칸을 넘어간다는 것은 now가 마이너스 값이 된다거나, 정해진 크기보다 크다는 것. 그러면 이동하면 안됨

# n, m = map(int, input().split())
# lists = [list(map(int, input().split())) for _ in range(m)]
# now = [0, 0]
# move = {'U': [0, -1], 'D': [0, 1], 'R': [1, 0], 'L': [-1, 0]}
# result = []

# while now != [n, m]:
#     now = now[0] + move['U'][0]

# ============================================================
# 행, 열이 하나만 홀수가 돼도 모든 지점을 방문할 수 있다.
# ?